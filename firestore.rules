
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // LEADS: Secure access to the leads collection
    match /leads/{leadId} {
      // Allow authenticated users to query the leads collection.
      // Firestore will ensure that any read query constraints on ownerId match the 'get' rule below.
      allow list: if request.auth != null;

      // Allow a user to get, update, or delete their own lead document.
      allow get, update, delete: if request.auth.uid == resource.data.ownerId;

      // Allow a user to create a new lead only if they are the owner.
      allow create: if request.auth.uid == request.resource.data.ownerId;
    }

    // PROPERTIES: Secure access to the properties collection
    match /properties/{propertyId} {
      // Allow authenticated users to query the properties collection.
      allow list: if request.auth != null;
      
      // Allow a user to get, update, or delete their own property document.
      allow get, update, delete: if request.auth.uid == resource.data.ownerId;

      // Allow a user to create a new property only if they are the owner.
      allow create: if request.auth.uid == request.resource.data.ownerId;
    }

    // DOCUMENTS: Secure access to the documents collection
    match /documents/{docId} {
       // Allow authenticated users to query their documents.
      allow list: if request.auth != null;

      // Allow a user to get, update, or delete their own document.
      allow get, update, delete: if request.auth.uid == resource.data.ownerId;

      // Allow a user to create a new document only if they are the owner.
      allow create: if request.auth.uid == request.resource.data.ownerId;
    }

    // NOTIFICATIONS: Users can only read their own, while functions can create them.
    match /notifications/{notificationId} {
      // Allow a user to get their own notification.
      allow get: if request.auth.uid == resource.data.userId;
      
      // A user cannot list all notifications, and cannot write them.
      allow list, write: if false;
    }
  }
}
