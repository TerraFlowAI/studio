rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // A user must be signed in to perform any action.
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper to check if the user owns the document being written.
    function isCreatingOwnDocument() {
      return isSignedIn() && request.resource.data.ownerId == request.auth.uid;
    }
    
    // Helper to check if the user owns an existing document.
    function isOwner(doc) {
      return isSignedIn() && doc.data.ownerId == request.auth.uid;
    }

    // LEADS: A user can only manage their own leads.
    match /leads/{leadId} {
      allow create: if isCreatingOwnDocument();
      allow read, update, delete: if isOwner(resource);
    }
    
    // PROPERTIES: A user can only manage their own properties.
    match /properties/{propertyId} {
      allow create: if isCreatingOwnDocument();
      allow read, update, delete: if isOwner(resource);
    }
    
    // DOCUMENTS: A user can only manage their own documents.
    match /documents/{docId} {
      allow create: if isCreatingOwnDocument();
      allow read, update, delete: if isOwner(resource);
    }

    // NOTIFICATIONS: Users can only read their own notifications.
    match /notifications/{notificationId} {
      // Nobody can write to notifications from the client; only backend functions.
      allow write: if false;

      // Allow read if the notification's userId matches the user's uid.
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
  }
}
